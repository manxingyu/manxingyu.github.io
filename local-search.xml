<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>听歌</title>
    <link href="/2022/08/29/%E9%9F%B3%E4%B9%90%E7%AB%99/"/>
    <url>/2022/08/29/%E9%9F%B3%E4%B9%90%E7%AB%99/</url>
    
    <content type="html"><![CDATA[ <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer@1/dist/APlayer.min.css"><script src="https://cdn.jsdelivr.net/npm/aplayer@1/dist/APlayer.min.js"></script><div id="mmedia-xjJZkLQqPZQyBXNp"></div><script> var xjJZkLQqPZQyBXNp_options = JSON.parse('{\"lrcType\":3,\"autoplay\":false,\"audio\":[{\"name\":\"七里香\",\"artist\":\"周杰伦\",\"url\":\"http://rheubjsha.hn-bkt.clouddn.com/%E9%9F%B3%E4%B9%90/music/%E3%80%80-%E4%B8%83%E9%87%8C%E9%A6%99.flac\",\"cover\":\"http://rheubjsha.hn-bkt.clouddn.com/%E9%9F%B3%E4%B9%90/%E5%B0%81%E9%9D%A2/%E4%B8%83%E9%87%8C%E9%A6%99.jpg\",\"lrc\":\"http://rheubjsha.hn-bkt.clouddn.com/%E9%9F%B3%E4%B9%90/%E6%AD%8C%E8%AF%8D/%E4%B8%83%E9%87%8C%E9%A6%99.lrc\",\"theme\":\"#ebd0c2\"},{\"name\":\"花海\",\"artist\":\"周杰伦\",\"url\":\"http://rheubjsha.hn-bkt.clouddn.com/%E9%9F%B3%E4%B9%90/music/%E3%80%80-%E8%8A%B1%E6%B5%B7.flac\",\"cover\":\"http://rheubjsha.hn-bkt.clouddn.com/%E9%9F%B3%E4%B9%90/%E5%B0%81%E9%9D%A2/%E9%AD%94%E6%9D%B0%E5%BA%A7.jpg\",\"lrc\":\"http://rheubjsha.hn-bkt.clouddn.com/%E9%9F%B3%E4%B9%90/%E6%AD%8C%E8%AF%8D/%E8%8A%B1%E6%B5%B7.lrc\",\"theme\":\"#46718b\"},{\"name\":\"园游会\",\"artist\":\"周杰伦\",\"url\":\"http://rheubjsha.hn-bkt.clouddn.com/%E9%9F%B3%E4%B9%90/music/%E5%9B%AD%E6%B8%B8%E4%BC%9A.flac\",\"cover\":\"http://rheubjsha.hn-bkt.clouddn.com/%E9%9F%B3%E4%B9%90/%E5%B0%81%E9%9D%A2/%E4%B8%83%E9%87%8C%E9%A6%99.jpg\",\"lrc\":\"http://rheubjsha.hn-bkt.clouddn.com/%E9%9F%B3%E4%B9%90/%E6%AD%8C%E8%AF%8D/%E5%9B%AD%E6%B8%B8%E4%BC%9A.lrc\",\"theme\":\"#46718b\"},{\"name\":\"红颜如霜\",\"artist\":\"周杰伦\",\"url\":\"http://rheubjsha.hn-bkt.clouddn.com/%E9%9F%B3%E4%B9%90/music/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E7%BA%A2%E9%A2%9C%E5%A6%82%E9%9C%9C.flac\",\"cover\":\"http://rheubjsha.hn-bkt.clouddn.com/%E9%9F%B3%E4%B9%90/%E5%B0%81%E9%9D%A2/%E6%9C%80%E4%BC%9F%E5%A4%A7%E7%9A%84%E4%BD%9C%E5%93%81.jpg\",\"lrc\":\"http://rheubjsha.hn-bkt.clouddn.com/%E9%9F%B3%E4%B9%90/%E6%AD%8C%E8%AF%8D/%E5%91%A8%E6%9D%B0%E4%BC%A6-%E7%BA%A2%E9%A2%9C%E5%A6%82%E9%9C%9C_%E7%88%B1%E6%AD%8C%E8%AF%8D%E5%BA%93%E7%BD%91.lrc\",\"theme\":\"#46718b\"},{\"name\":\"半岛铁盒\",\"artist\":\"周杰伦\",\"url\":\"http://rheubjsha.hn-bkt.clouddn.com/%E9%9F%B3%E4%B9%90/music/%E3%80%80-%E5%8D%8A%E5%B2%9B%E9%93%81%E7%9B%92.flac\",\"cover\":\"http://rheubjsha.hn-bkt.clouddn.com/%E9%9F%B3%E4%B9%90/%E5%B0%81%E9%9D%A2/%E5%85%AB%E5%BA%A6%E7%A9%BA%E9%97%B4.jpg\",\"lrc\":\"http://rheubjsha.hn-bkt.clouddn.com/%E9%9F%B3%E4%B9%90/%E6%AD%8C%E8%AF%8D/%E5%8D%8A%E5%B2%9B%E9%93%81%E7%9B%92.lrc\",\"theme\":\"#46718b\"},{\"name\":\"未定\",\"artist\":\"周杰伦\",\"url\":\"url2.mp3\",\"cover\":\"cover2.jpg\",\"lrc\":\"lrc2.lrc\",\"theme\":\"#46718b\"}],\"volume\":0.8,\"fixed\":true}'); xjJZkLQqPZQyBXNp_options.container = document.getElementById("mmedia-xjJZkLQqPZQyBXNp"); const ap_xjJZkLQqPZQyBXNp = new APlayer(xjJZkLQqPZQyBXNp_options); </script>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo-网页中插入音乐和视频音乐</title>
    <link href="/2022/08/29/%E7%BD%91%E9%A1%B5%E4%B8%AD%E6%8F%92%E5%85%A5%E9%9F%B3%E4%B9%90%E5%92%8C%E8%A7%86%E9%A2%91%E9%9F%B3%E4%B9%90/"/>
    <url>/2022/08/29/%E7%BD%91%E9%A1%B5%E4%B8%AD%E6%8F%92%E5%85%A5%E9%9F%B3%E4%B9%90%E5%92%8C%E8%A7%86%E9%A2%91%E9%9F%B3%E4%B9%90/</url>
    
    <content type="html"><![CDATA[<h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=475479888&auto=1&height=66"></iframe><style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style><div class="bbplayer"><iframe class="bbplayer" id="mmedia-tqsSeUjUIdWDsyxF" src="https://player.bilibili.com/player.html?bvid=BV1MS4y1q7qa&page=1&high_quality=1&danmaku=true" allowfullscreen="allowfullscreen" scrolling="no" border="0" frameborder="0" framespacing="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe></div><script> document.getElementById("mmedia-tqsSeUjUIdWDsyxF").style.height=document.getElementById("mmedia-tqsSeUjUIdWDsyxF").scrollWidth*0.76+"px";    window.onresize = function(){      document.getElementById("mmedia-tqsSeUjUIdWDsyxF").style.height=document.getElementById("mmedia-tqsSeUjUIdWDsyxF").scrollWidth*0.76+"px";    }; </script><h1 id="网页中插入音乐和视频"><a href="#网页中插入音乐和视频" class="headerlink" title="网页中插入音乐和视频"></a>网页中插入音乐和视频</h1><p>安装</p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="language-xml">npm install hexo-tag-mmedia@1 --save</span><br></code></pre></td></tr></table></figure><h2 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h2><h4 id="Audio"><a href="#Audio" class="headerlink" title="Audio"></a>Audio</h4><h5 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h5><p>可以插入 html5 原生 audio 标签</p><h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">mmedia</span> <span class="hljs-string">&quot;audio&quot;</span> <span class="hljs-string">&quot;src:a.mp3&quot;</span> <span class="hljs-template-tag">%&#125;</span><br></code></pre></td></tr></table></figure><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">mmedia</span> <span class="hljs-string">&quot;audio&quot;</span> <span class="hljs-string">&quot;src:https://baidu.com/a.mp3&quot;</span> <span class="hljs-string">&quot;autoplay:true&quot;</span> <span class="hljs-template-tag">%&#125;</span><br></code></pre></td></tr></table></figure><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><blockquote><p>此部分请熟读 <a href="https://www.w3.org/TR/2014/REC-html5-20141028/embedded-content-0.html#the-audio-element">Audio 相关介绍(opens new window)</a></p></blockquote><ul><li>使用 <code>:</code> 或 <code>=</code> 分割。</li><li>所有 <code>&lt;audio&gt;</code> 标签的原生参数均可添加，只要能写进去就可以。</li><li>具体能否实现相关标准，取决于客户端浏览器。</li></ul><p>JSON 参数</p><p>mmedia 插件允许在 contents 部分使用 JSON 编写配置，使用 JSON5 标准。</p><h5 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h5><p>默认配置可写入 <code>_config.yml</code> 下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">mmedia:</span><br>  <span class="hljs-attr">audio:</span><br>    <span class="hljs-attr">default:</span><br>      <span class="hljs-attr">autoplay:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">key:</span> <span class="hljs-string">vaule</span><br></code></pre></td></tr></table></figure><h3 id="HTML插件"><a href="#HTML插件" class="headerlink" title="HTML插件"></a>HTML插件</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;iframe <span class="hljs-attribute">frameborder</span>=<span class="hljs-string">&quot;no&quot;</span> <span class="hljs-attribute">border</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attribute">marginwidth</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attribute">marginheight</span>=<span class="hljs-string">&quot;0&quot;</span> <span class="hljs-attribute">width</span>=330 <span class="hljs-attribute">height</span>=86 <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;//music.163.com/outchain/player?type=2&amp;id=475479888&amp;auto=1&amp;height=66&quot;</span>&gt;&lt;/iframe&gt;<br><br></code></pre></td></tr></table></figure><h3 id="MetingJS"><a href="#MetingJS" class="headerlink" title="MetingJS"></a>MetingJS</h3><p>示例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs text">&#123;% mmedia &quot;meting&quot; &quot;auto=https://y.qq.com/n/yqq/song/001RGrEX3ija5X.html&quot; %&#125;<br><br><br>&#123;% mmedia &quot;meting&quot; &quot;server=netease&quot;&quot;type=playlist&quot;&quot;id=60198&quot; %&#125;<br><br></code></pre></td></tr></table></figure><p>参数：</p><p>基本兼容 hexo-tag-aplayer，绝大部分可以直接从 hexo-tag-aplayer 迁移，参数形式为 <code>&quot;option:vaule&quot;</code> ，不懂的可以参考 <a href="https://github.com/metowolf/MetingJS#option">MetingJS(opens new window)</a></p><table><thead><tr><th align="left">配置项</th><th align="left">默认</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">id</td><td align="left">必须</td><td align="left">音乐 id，第一个参数</td></tr><tr><td align="left">server</td><td align="left">必须</td><td align="left">音乐平台，第二个参数，可选： <code>netease</code> , <code>tencent</code> , <code>kugou</code> , <code>xiami</code> , <code>baidu</code></td></tr><tr><td align="left">type</td><td align="left">必须</td><td align="left">音乐类型，第三个参数，可选： <code>song</code> , <code>playlist</code> , <code>album</code> <code>search</code> , <code>artist</code></td></tr><tr><td align="left">auto</td><td align="left">无</td><td align="left">有 auto 选项时前面参数不需要填写，否则为必填，见示例 2</td></tr><tr><td align="left">autoplay</td><td align="left"><code>false</code></td><td align="left">自动播放，带有此参数表示 <code>true</code> ，不带表示 <code>false</code></td></tr><tr><td align="left">fixed</td><td align="left"><code>false</code></td><td align="left">吸底模式，带有此参数表示 <code>true</code> ，不带表示 <code>false</code></td></tr><tr><td align="left">mini</td><td align="left"><code>false</code></td><td align="left">迷你模式，带有此参数表示 <code>true</code> ，不带表示 <code>false</code></td></tr><tr><td align="left">listfolded</td><td align="left"><code>false</code></td><td align="left">默认折叠列表，带有此参数表示 <code>true</code> ，不带表示 <code>false</code></td></tr><tr><td align="left">mutex</td><td align="left"><code>true</code></td><td align="left">互斥，如不需互斥 <code>&quot;mutex:false&quot;</code></td></tr><tr><td align="left">theme</td><td align="left"><code>#2980b9</code></td><td align="left">主题颜色</td></tr><tr><td align="left">loop</td><td align="left"><code>all</code></td><td align="left">循环模式 ，可选值 <code>all</code> , <code>one</code> , <code>none</code></td></tr><tr><td align="left">order</td><td align="left"><code>list</code></td><td align="left">播放顺序，可选值 <code>list</code> , <code>random</code></td></tr><tr><td align="left">preload</td><td align="left"><code>auto</code></td><td align="left">预加载模式 ，可选 <code>none</code> , <code>metadata</code> , <code>auto</code></td></tr><tr><td align="left">volume</td><td align="left"><code>0.7</code></td><td align="left">默认音量，可选 <code>0-1</code></td></tr><tr><td align="left">lrctype</td><td align="left"><code>0</code></td><td align="left">歌词类型</td></tr><tr><td align="left">listmaxheight</td><td align="left"><code>340px</code></td><td align="left">播放器最大高度</td></tr><tr><td align="left">storagename</td><td align="left"><code>metingjs</code></td><td align="left"></td></tr></tbody></table><p>此部分请熟读 <a href="https://github.com/metowolf/MetingJS#option">MetingJS 文档</a></p><p>后端服务器可以使用官方后端，也可以使用我自己写的后端服务器 <a href="https://github.com/MonoLogueChi/MetingJS.Server">MetingJS.Server (opens new window)</a>自建服务。</p><h3 id="Aplayer"><a href="#Aplayer" class="headerlink" title="Aplayer"></a>Aplayer</h3><h4 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h4><p>*主要：这里的url：，没有找到本地放mp3格式的文件，所以本地地址无效，要在网上找音乐的下载地址才可以配置成功.</p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">mmedia</span> <span class="hljs-string">&quot;aplayer&quot;</span> <span class="hljs-string">&quot;name:songName&quot;</span> <span class="hljs-string">&quot;url:a.mp3&quot;</span> <span class="hljs-template-tag">%&#125;</span><br></code></pre></td></tr></table></figure><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">mmedias</span> <span class="hljs-string">&quot;aplayer&quot;</span> <span class="hljs-string">&quot;autoplay:false&quot;</span> <span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml">&#123;</span><br><span class="language-xml">  &quot;volume&quot;: 0.8,</span><br><span class="language-xml">  &quot;audio&quot;:</span><br><span class="language-xml">  [</span><br><span class="language-xml">    &#123;</span><br><span class="language-xml">      &quot;name&quot;: &quot;name1&quot;,</span><br><span class="language-xml">      &quot;artist&quot;: &quot;artist1&quot;,</span><br><span class="language-xml">      &quot;url&quot;: &quot;url1.mp3&quot;,</span><br><span class="language-xml">      &quot;cover&quot;: &quot;cover1.jpg&quot;,</span><br><span class="language-xml">      &quot;lrc&quot;: &quot;lrc1.lrc&quot;,</span><br><span class="language-xml">      &quot;theme&quot;: &quot;#ebd0c2&quot;</span><br><span class="language-xml">    &#125;,</span><br><span class="language-xml">    &#123;</span><br><span class="language-xml">      &quot;name&quot;: &quot;name2&quot;,</span><br><span class="language-xml">      &quot;artist&quot;: &quot;artist2&quot;,</span><br><span class="language-xml">      &quot;url&quot;: &quot;url2.mp3&quot;,</span><br><span class="language-xml">      &quot;cover&quot;: &quot;cover2.jpg&quot;,</span><br><span class="language-xml">      &quot;lrc&quot;: &quot;lrc2.lrc&quot;,</span><br><span class="language-xml">      &quot;theme&quot;: &quot;#46718b&quot;</span><br><span class="language-xml">    &#125;</span><br><span class="language-xml">  ]</span><br><span class="language-xml">&#125;</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">endmmedias</span> <span class="hljs-template-tag">%&#125;</span><br></code></pre></td></tr></table></figure><h4 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h4><blockquote><p>此部分请熟读 <a href="http://aplayer.js.org/">APlayer 文档(opens new window)</a></p></blockquote><ul><li>使用 <code>:</code> 或 <code>=</code> 分割。</li></ul><p>详细参数表：</p><table><thead><tr><th align="left">参数</th><th align="left">默认</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">name</td><td align="left">-</td><td align="left">audio name</td></tr><tr><td align="left">artist</td><td align="left">-</td><td align="left">audio artist</td></tr><tr><td align="left">url</td><td align="left">-</td><td align="left">audio url</td></tr><tr><td align="left">cover</td><td align="left">-</td><td align="left">audio cover</td></tr><tr><td align="left">lrc</td><td align="left">-</td><td align="left">audio lrc</td></tr><tr><td align="left">theme</td><td align="left">-</td><td align="left">audio theme</td></tr><tr><td align="left">type</td><td align="left">auto</td><td align="left">audio type 可选 ‘auto’, ‘hls’, ‘normal’</td></tr><tr><td align="left">autoplay</td><td align="left">false</td><td align="left">autoplay</td></tr><tr><td align="left">loop</td><td align="left">‘all’</td><td align="left">player loop play, values: ‘all’, ‘one’, ‘none’</td></tr><tr><td align="left">order</td><td align="left">‘list’</td><td align="left">player play order, values: ‘list’, ‘random’</td></tr><tr><td align="left">volume</td><td align="left">0.7</td><td align="left">default volume,</td></tr><tr><td align="left">tlistMaxHeight</td><td align="left">-</td><td align="left">list max height</td></tr></tbody></table><p>不在表格内的参数请使用下面 JSON 类型的参数。</p><h4 id="JSON-参数"><a href="#JSON-参数" class="headerlink" title="JSON 参数"></a>JSON 参数</h4><p>mmedia 插件允许在 contents 部分使用 JSON 编写配置，由于允许使用 JSON5，此项配置几乎与 APlayer 完全一致。</p><p>详情请见上方示例。</p><h4 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h4><p>默认配置可写入 <code>_config.yml</code> 下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">mmedia:</span><br>  <span class="hljs-attr">aplayer:</span><br>    <span class="hljs-attr">js:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/aplayer@1/dist/APlayer.min.js</span><br>    <span class="hljs-attr">css:</span> <span class="hljs-string">https://cdn.jsdelivr.net/npm/aplayer@1/dist/APlayer.min.css</span><br>    <span class="hljs-attr">default:</span><br>      <span class="hljs-attr">contents:</span><br></code></pre></td></tr></table></figure><h2 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h2><h3 id="Video"><a href="#Video" class="headerlink" title="Video"></a>Video</h3><h4 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h4><p>可以插入 html5 原生 video 标签</p><h4 id="使用-2"><a href="#使用-2" class="headerlink" title="使用"></a>使用</h4><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">mmedia</span> <span class="hljs-string">&quot;video&quot;</span> <span class="hljs-string">&quot;src:a.mp4&quot;</span> <span class="hljs-template-tag">%&#125;</span><br></code></pre></td></tr></table></figure><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">mmedia</span> <span class="hljs-string">&quot;video&quot;</span> <span class="hljs-string">&quot;src:https://baidu.com/a.mp4&quot;</span> <span class="hljs-string">&quot;autoplay:true&quot;</span> <span class="hljs-template-tag">%&#125;</span><br></code></pre></td></tr></table></figure><h4 id="参数-2"><a href="#参数-2" class="headerlink" title="参数"></a>参数</h4><blockquote><p>此部分请熟读 <a href="https://www.w3.org/TR/2014/REC-html5-20141028/embedded-content-0.html#the-video-element">Video 相关介绍(opens new window)</a></p></blockquote><ul><li>使用 <code>:</code> 或 <code>=</code> 分割。</li><li>所有 <code>&lt;video&gt;</code> 标签的原生参数均可添加，只要能写进去就可以。</li><li>具体能否实现相关标准，取决于客户端浏览器。</li></ul><h4 id="JSON-参数-1"><a href="#JSON-参数-1" class="headerlink" title="JSON 参数"></a>JSON 参数</h4><p>mmedia 插件允许在 contents 部分使用 JSON 编写配置，使用 JSON5 标准。</p><h4 id="配置-2"><a href="#配置-2" class="headerlink" title="配置"></a>配置</h4><p>默认配置可写入 <code>_config.yml</code> 下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">mmedia:</span><br>  <span class="hljs-attr">video:</span><br>    <span class="hljs-attr">default:</span><br>      <span class="hljs-attr">autoplay:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">key:</span> <span class="hljs-string">vaule</span><br></code></pre></td></tr></table></figure><h3 id="哔哩哔哩"><a href="#哔哩哔哩" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h3><h4 id="使用-3"><a href="#使用-3" class="headerlink" title="使用"></a>使用</h4><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">&#123;<span class="hljs-meta">%</span> mmedia <span class="hljs-string">&quot;bilibili&quot;</span> <span class="hljs-string">&quot;bvid:BV1MS4y1q7qa&quot;</span>  <span class="hljs-meta">%</span>&#125;<br></code></pre></td></tr></table></figure><h4 id="参数-3"><a href="#参数-3" class="headerlink" title="参数"></a>参数</h4><ul><li>使用 <code>:</code> 或 <code>=</code> 分割。</li></ul><p>详细参数表：</p><table><thead><tr><th align="left">参数</th><th align="left">默认</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">aid</td><td align="left">-</td><td align="left">aid</td></tr><tr><td align="left">bvid</td><td align="left">-</td><td align="left">bvid，与 aid 同时出现时以 bvid 为准</td></tr><tr><td align="left">page</td><td align="left">1</td><td align="left">page</td></tr><tr><td align="left">danmaku</td><td align="left">true</td><td align="left">是否有弹幕 ture or false</td></tr><tr><td align="left">allowfullscreen</td><td align="left">allowfullscreen</td><td align="left">允许全屏， allowfullscreen 或 true 允许，其他选项不允许</td></tr><tr><td align="left">sandbox</td><td align="left">见 <a href="https://www.u2sb.com/pages/19d343/#%E9%85%8D%E7%BD%AE">配置</a></td><td align="left">iframe sandbox</td></tr><tr><td align="left">width</td><td align="left">100%</td><td align="left">css 属性</td></tr><tr><td align="left">max_width</td><td align="left">850px</td><td align="left">css 属性</td></tr><tr><td align="left">margin</td><td align="left">auto</td><td align="left">css 属性</td></tr></tbody></table><h4 id="JSON-参数-2"><a href="#JSON-参数-2" class="headerlink" title="JSON 参数"></a>JSON 参数</h4><p>mmedia 插件允许在 contents 部分使用 JSON 编写配置，使用 JSON5 标准。</p><h4 id="配置-3"><a href="#配置-3" class="headerlink" title="配置"></a>配置</h4><p>默认配置可写入 <code>_config.yml</code> 下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">mmedia:</span><br>  <span class="hljs-attr">bilibili:</span><br>    <span class="hljs-attr">default:</span><br>      <span class="hljs-attr">page:</span> <span class="hljs-number">1</span><br>      <span class="hljs-attr">danmaku:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">allowfullscreen:</span> <span class="hljs-string">allowfullscreen</span><br>      <span class="hljs-attr">sandbox:</span> <span class="hljs-string">allow-top-navigation</span> <span class="hljs-string">allow-same-origin</span> <span class="hljs-string">allow-forms</span> <span class="hljs-string">allow-scripts</span> <span class="hljs-string">allow-popups</span><br>      <span class="hljs-attr">width:</span> <span class="hljs-number">100</span><span class="hljs-string">%</span><br>      <span class="hljs-attr">max_width:</span> <span class="hljs-string">850px</span><br>      <span class="hljs-attr">margin:</span> <span class="hljs-string">auto</span><br></code></pre></td></tr></table></figure><h3 id="Dplayer"><a href="#Dplayer" class="headerlink" title="Dplayer"></a>Dplayer</h3><h4 id="使用-4"><a href="#使用-4" class="headerlink" title="使用"></a>使用</h4><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">mmedia</span> <span class="hljs-string">&quot;dplayer&quot;</span> <span class="hljs-string">&quot;url:a.mp4&quot;</span> <span class="hljs-template-tag">%&#125;</span><br></code></pre></td></tr></table></figure><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">mmedias</span> <span class="hljs-string">&quot;dplayer&quot;</span> <span class="hljs-string">&quot;flv:&quot;</span> <span class="hljs-string">&quot;url:https://dandoc.u2sb.com/video/%E5%AE%89%E8%A3%85/1-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%89%E8%A3%85.mp4&quot;</span> <span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml">&#123;</span><br><span class="language-xml">  &quot;contextmenu&quot;:</span><br><span class="language-xml">  [</span><br><span class="language-xml">    &#123;</span><br><span class="language-xml">      text: &quot;custom1&quot;,</span><br><span class="language-xml">      link: &quot;https://github.com/DIYgod/DPlayer&quot;</span><br><span class="language-xml">    &#125;</span><br><span class="language-xml">  ]</span><br><span class="language-xml">&#125;</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">endmmedias</span> <span class="hljs-template-tag">%&#125;</span><br></code></pre></td></tr></table></figure><h4 id="参数-4"><a href="#参数-4" class="headerlink" title="参数"></a>参数</h4><ul><li>使用 <code>:</code> 或 <code>=</code> 分割。</li></ul><p>参数：请参考dplayer文档[dplayer文档]<a href="https://dplayer.diygod.dev/zh/guide.html">指南 | DPlayer (diygod.dev)</a></p><p>详细参数表：</p><table><thead><tr><th align="left">参数</th><th align="left">默认</th><th align="left">解释</th></tr></thead><tbody><tr><td align="left">url</td><td align="left">-</td><td align="left">video.url</td></tr><tr><td align="left">pic</td><td align="left">-</td><td align="left">video.pic</td></tr><tr><td align="left">thumbnails</td><td align="left">-</td><td align="left">video.thumbnails</td></tr><tr><td align="left">type</td><td align="left">auto</td><td align="left">video.type, values: ‘auto’, ‘hls’, ‘flv’, ‘dash’, ‘webtorrent’, ‘normal’ or other</td></tr><tr><td align="left">autoplay</td><td align="left">false</td><td align="left">video autoplay</td></tr><tr><td align="left">loop</td><td align="left">false</td><td align="left">video loop</td></tr><tr><td align="left">logo</td><td align="left">-</td><td align="left">showing logo in the top left corner, you can adjust its size and position by CSS</td></tr><tr><td align="left">volume</td><td align="left">0.7</td><td align="left">default volume</td></tr><tr><td align="left">screenshot</td><td align="left">false</td><td align="left">enable screenshot, if true, video and video poster must enable Cross-Origin</td></tr><tr><td align="left">id</td><td align="left">-</td><td align="left">danmaku.id, danmaku pool id, it must be unique</td></tr><tr><td align="left">api</td><td align="left">-</td><td align="left">danmaku.api, see <a href="http://dplayer.js.org/guide.html#danmaku-api">Danmaku API(opens new window)</a></td></tr></tbody></table>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>给文章设置密码</title>
    <link href="/2022/08/27/%E7%BB%99%E6%96%87%E7%AB%A0%E8%AE%BE%E7%BD%AE%E5%AF%86%E7%A0%81/"/>
    <url>/2022/08/27/%E7%BB%99%E6%96%87%E7%AB%A0%E8%AE%BE%E7%BD%AE%E5%AF%86%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="9a8a74f031248e485ee6edc4f0dad35f5383af5e1822df15b39c76eba9c48b91">4630436162ade97ba2718b7d0c4b3b63cb3a3f659c5ca08b4bca0f58459281868333489fb910a4562f5428f01b77dd40ad446ec196291bd1fd24f6d1afc59a4fd8809965e4b8108eab1b780fb979b060f782c7f75a4d6eefac877b9717520356cda6ac52945f730569191b7b572eea10dbb6f666b8f7ff29df68a6ebd12760f50372b530c5b0b65086c0a4de35b3cc11ece10fc1836ea1ee6a6fb5feecc927237a5bc88cf4fd37e00b9d8910274680274f67840181ddd1d99864813d0500de585c69a19fb8d0e53111e20155ad171bd0289eaff083b7502b4c43b094e93e28e5d4a14e756ef209a68f17293118bbc0d1dc730b48aa35dcdc4df7d8b07795ea2c46a333c9284937c45b163c80277c4f8eca16cab3965ce220cfc6bc46b970139c6b08b512ddc1f39f90003b49a8afead25dce470147cc72e060e9e74ea7822ed924aca784e8adb2b7cf2d84553028874b681dc03d26481a576eaf33fa18a40d668c09a9a478bc62b0eb91017bad3cad7dd1690af0e2575ac5cc5554465819d1a01b802d840004818a244effc95b19ce4815c37baa2817f3cd8d4c533231dd2f9dd5966c0c1d7f4d249927fc2bdea5ee6453d1a00c459f7d14dbc54e44ab35ba47b1e94bef5207ae0dd07b757785e49ecf23f9644c27f5f671fadfc8bd17a4e8f0011dc20f3ac3c9f4d874ee17c02f3a6749f8ea1ef69e68fad3baecf7741fa43499506b9ad7e0b68abf119b80c19659e04c0dbf811f28eacaf144a5063cf39d3a19cc94d0580c234ee47f059c26377da038f444fec722b6acec2c1135c280ab76d2eb0399ba1276d72a8f51d3ae082d6723cddb62c359fcb6fce178ebc0de3ee351cf16a93c605eb1c2dc63d642a80f933501772876470a7216261ef7429a86e1019ca90a3bc278d238bd839196a4ed75e4f28a67d42307dbc386afa441f187e6bb11e73df50467cd8b7d5ff94d8725759e89a32f88d020a3be52b82ed630ded38a42966251468099dfaf46ff9ea75418b52817b7fc1acb1cd09e4e26775bf687b7e3e924cbbd604f8fec56b6b31247fca4ad27ee026c3546f76a629feefc651aa616a7387f1bfc34b31cee731fb43c79e232e81fa15125a7db37d98e1201b95750a6e376a2222e1af1504e101b8206d2c14e76866472b533a328926b87928be14f381a1e83382f9d450e91aa12efe9f2711c76fc14eaf73890bf65903e6fba04abbd68a51b64e901841c4a36b3601da7d5a17ebd1fb0bb3d2202367b21ac4dfa82dbc02c0b39bdff6277dd000bcd2ee7e1e54ef9255e44163e7da16c64859d6401ff0242aac972ad1a0f552d53a4c32dabccefa6d25589ee0502984176f86cc7e6d2d069ef9daa332f7970bf7166486807628f2cf600ebc86fd175d849c251767f37868dbfe79b082ae5e20878f2b26a1e99e1d99f4bae805a22363d33aa2a6648e7707b974e7c6654a01e9c7cef9528b4a32b04c1b87a779e5264488ffe46dfec3953e072164d10fb4bbc2e5193cb488b841b6076fcb080443c03f12dc297f512b025733d5a8294efccec3c9e3d9245369e251b2cc4db23d77f40b2d1b2af0f94a38f92addde49ae1b28b0a40a0481e79383a649199ac7cc981fbc419e1abb3887cd4912979c6d4e3a546b0f0cc64c8c806d0eb69902fb6bf1a0b913f0c4c9bc1a86106719893cd12b775a479d9fbc4a916b5fc9cdc262450eaa25f0352e4afa110b69b6c1208f101e24ed191dd56f700bc3c2436155058f7b226b62b4147edc5e5a59e68a53b9395cc343dc3a003cc9d8b49e8bd90bd066fbbddf2add6eeaa27bc76ea2334652c5a08cdc7348ba97c76dbabac98c6fa83d5f13a5ec70e4d1c12dae501136fe64b87c3995ee3dbef962ff428502bb3de6a364121e0e75325c56e99e5ed8483556aecb35aef3f21d9c9e52df8e8d74ed6b322ea949f07c4b1bb9012ca240c3feb336d0ca01bd643b2c7669ffdf1e478dc39d6aeedd7161e0a33873c21d5fe81d751e387952fa2b3ddd8476087a921666f33a347d0d13e1b256d18546ce85978bf851f4a701cfde3e15e18756c71bee37cca0d325e4c15fa4100607214a535dceee6e6e8036ea8a7ed62b85cf86f09a4d832ed5815913067577e2e6b6cdf0551e357fb8120810028ce840b82c76914e804f9d85fcb426a9425c3eb6167417dc81c23d764111fff7b8ac57d006f9ec496c67744a272ad97e7193ddf87bb94f8df8486c3e2b3e100a03968a8224053a58a4693ad1e79a39ed711e7ab8c8a534e597f6f68a9c4bfae1afe0e374b433bc179100de91951db3c550fd42c3152437cb9947f9d1e092a073bc0776cb959020a90c39c120b4267ed9ef2a915b504941d23cbc5f467372c9e58b62f8a156cde0e59827a673430a51b010f9999330630d8043ad44d8f21fb34e713c789d8cc5b4a2cd132f4d98c3d65689c90dd7998d4404dcef5492e44794065e9c90100878da2aa52adb5e75532cbc6df3351bb84a99dba1f54e890135a38caa57569a035eff9f1fb2878b6c8ba524b6f6ed5eb0ab15f43466a154c95e18d96b4ac22d1f6b8602290d4b90b7f6c621851291722c7e57775b657c980dcfb4fa1d8ba8010f370e4e2b26ac0d93c87fd1937a6bc74db74b80bba0f4c4ca4673de020acb51f736dca919995ba07f30c4abb4c707b29125f3124b370a795ad28566dc416d2900383467957f10ef7be0c6ba6413ebad30047c1e11fa55839ebb509c5fdeacb9617cd571d5dcd38d09883fb1e31dfce65a461ad8f29628941f70f09ffc6e8fe1af0c5fdc0a9c5adfbd0d23b9053d91d6cde616a8d793804c758f4274ed4fc332d494605e0f3e1ae36fe8fef86a1e3954145c26e9dc17fdea8fcd0ab729cd5c7a8e24db678e52fb781fa62285db5b3dc44c5095459def608dbdc8ec56690935f6af2c2b40ccf9587490c34c55d8b1cbf966fd83bcdfd1b6705ca7e6b594abf7ceb372c8e011a1f97379b523ab01b2a41270214a10636681ca62e9970e976e77131e02789d74b6cf2adfe27b0b5ade59381aacc5cf1fdf61d95c63125482cb32a45bb198c7fbdd761caf4a975833156c2505b9d300ea11e6bd8eebbf6f04c70bf7305c555338fb6c5380889e03f95bc38710c88420fe05dfad3c9cec6d8f43ff7f31f57efccc9fe54f624a18e92aa4cb27451e9a6c2c6f2d0a96553a6b812a1d568e53d2ad2f5ce3745902d464a22773274e3f27aa86c2c6b5911608f623919ea89dbaee0b424ebd579593524bb309ff213d6fc70bc33935aa29318f6994451eb396627bc62dae665c5595ccc7404c60447c589c0585beef54582f19af704d64d78b30655db994eb70e23735d251eb21ed644b270ad13ed7ea05c58c42a56ae272df97ff22e69532373681f5c9d9a1de4b136498fc54c6d4d4b86ffa0ae992d1d8ea29a20272be5d3c9bdfdf1d292cc7b07bfb2b78379997fa6d4b928a577f22a48071e133926d81ebb4663dde2edc3048169a8207903cfbcc5067dcc3ef0df9c8c9a1bdb31d8b04fe9800b0d41d4ee1b8c3faeed09e45f2ba8aa8e5b5707e30d15807daf63f5c1e9fd03d4f1b4e74916077cbf3790273c106b097f3e73847c4ecef1d119c07f1f646d7878da69d576f516ec6ac85eee32c7a82f6e289c7ddd4cf6fbb640b4578cf23c63e7730b9822b14371c6e743bb29faf5944965d0105a6cb4ddff3ccb93b2420cf361449a33d59375142b238ebab24668f26600ffd6ed97ca4facc2d8ecfa10bc4c4d9a87f17f0d89bb06405740de5719eaf3066c9b2624863153af68fa0df7b549e9bbdf2015a0cbac317d919484128e05114f33821a38626747d610329313b84108ed02cc2b1130eafbe64a1e7345f2fde17a3eb4f29d2772aad67712042a965182fd32194067c59d1dc19e4ebcfdc91e497ec8354e5a9a2414a3a9f5623a5731e95b634eda2e3ade9dff7e526be7ce13c128ea65c8282b3a6af9f78ec0b28fb23f5b9f364524d77f9734931695d4e07b8fee1d0deddc5cf013f1340707b1443b8a2a9efd2a4361b2af96685e65da7e4c129b1f61c8348e622383d061c20dfaed50b04cd4c7def60d06c36459ba09aeced95ebbc62c18915455eeaf58cb103a52483be0c8b00edb2420dc9fa410edd29a89b626e27dc4cb5934a156012ae3a088a26729be169fd7102d34a8416ca81802150c13446e691cf9544352e2749d90bfd2a2b0c28022744fbab7a02f5198007140ba19fc23a8cd8b4bc7c16d2ebdc2b63eed06bb07c01b52ff47b84f5d999e11c884c12b0ceea490783dfcdf6a6de5db4c5eb9ac59ea0231d9afee2500b1ba601d46f545ed99b891bed79680336c449fac1f3e938a045784f727ed9e25e9401ef5d53b3a8d3f59967cc0f77b9f3fa545794884421bf3e43ba565f411ab13c50ce095f6c0610efe14825bbee623bc00974a51c2279aa6ac9f7ff353dd11d6199442b41201800cfa071b11f070d6be443347c9d74e89c4eadbf84d356f299423d669495ca7f78349463fa74236fbc74c8283472ff0073ae64fd1d07d0f8111de75c25c43b2e00038f49a265571f327e3e4e9f59e74375357803432341920066f2bf2d6bf1ae5cc7a8a84ebb0652bec701e532044c91340aa7c3063322b8dc3d02c6842b9f714f4b159778d94d8462879389aa2c8f038de932382d3a4cc25240b0e6e46d7c31283dcbb172de4bd3edfd0d47bf2e9f2b9d59437387eaa6bf392c1632279c33e0a8dcf3a3254b1f11320c0fc97bb20bdf2b4356d7ed9838e06f1bb93fd45fa89b4f200882aad2ebaf7031f8eb7b68d4e122f1366a733fab42365bb50e1378161129703c2cfd4ed4b95b5f715f555b079a0291bc4d7c1962211afa0e14877b68ba2</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>opencv库函数</title>
    <link href="/2022/08/15/opencv%E5%BA%93%E5%87%BD%E6%95%B0/"/>
    <url>/2022/08/15/opencv%E5%BA%93%E5%87%BD%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="图像显示、处理："><a href="#图像显示、处理：" class="headerlink" title="图像显示、处理："></a>图像显示、处理：</h1><h2 id="cv2-imread"><a href="#cv2-imread" class="headerlink" title="cv2.imread"></a>cv2.imread</h2><p>img &#x3D;cv2.imread(“address”,flags)</p><p>flags：标志位，{cv2.IMREAD_COLOR，cv2.IMREAD_GRAYSCALE，cv2.IMREAD_UNCHANGED}</p><p>cv2.IMREAD_COLOR：默认参数，读入一副彩色图片，忽略alpha通道，可用1作为实参替代</p><p>cv2.IMREAD_GRAYSCALE：读入灰度图片，可用0作为实参替代</p><p>cv2.IMREAD_UNCHANGED：顾名思义，读入完整图片，包括alpha通道，可用-1作为实参替代</p><p>PS：alpha通道，又称A通道，是一个8位的灰度通道，该通道用256级灰度来记录图像中的透明度复信息，定义透明、不透明和半透明区域，其中黑表示全透明，白表示不透明，灰表示半透明</p><h2 id="cv2-resize"><a href="#cv2-resize" class="headerlink" title="cv2.resize"></a>cv2.resize</h2><p>cv2.resize (图像,dsize&#x3D;None,fx&#x3D;2,fy&#x3D;2,interpolation)</p><p> cv2.resize（）函数中，主要用到的形参包括</p><p>输入Mat数据，</p><p>dsize：代表期望的输出图像大小尺寸</p><p>fx：代表水平方向上（图像宽度）的缩放系数，</p><p>fy：代表竖直方向上（图像高度）的缩放系数，另外，如果dsize被设置为0（None），则按fx与fy与原始图像大小相乘得到输出图像尺寸大小。</p><p>interpolation：插值方式，默认选择线性插值，越复杂的插值方式带来的改变和差异越大。</p><h2 id="cv2-imshow"><a href="#cv2-imshow" class="headerlink" title="cv2.imshow"></a>cv2.imshow</h2><p>原型：imshow(winname,mat)<br> 作用：创建一个图像窗口<br> 参数：winname，窗口名称。mat，图像矩阵。</p><h2 id="cv2-waitKey"><a href="#cv2-waitKey" class="headerlink" title="cv2.waitKey"></a>cv2.waitKey</h2><p>原型：waitKey(delay&#x3D;None) 为0 时则是等待按键的意思<br> 作用；接受一个按键事件并返回按键的ASCII码。<br> 参数：delay为按下后返回的延迟时间。</p><h2 id="cv2-destroyWindow"><a href="#cv2-destroyWindow" class="headerlink" title="cv2.destroyWindow"></a>cv2.destroyWindow</h2><p>原型： destroyWindow(winname)<br> 作用：关闭一个由imshow产生的图像窗口<br> 参数：winname，关闭的窗口名字</p><h2 id="cv2-cvtColor"><a href="#cv2-cvtColor" class="headerlink" title="cv2.cvtColor"></a>cv2.cvtColor</h2><p>原型：cvtColor(src,code,dst&#x3D;None,dstCn&#x3D;None)<br> 作用：将一幅图像从一个色彩空间转换到另一个色彩空间<br> 参数：code，转换的色彩空间</p><h2 id="cv2-threshold"><a href="#cv2-threshold" class="headerlink" title="cv2.threshold"></a>cv2.threshold</h2><p>原型：threshold(src,thresh,maxval,type,dst&#x3D;None)<br> 作用：将图像的每个像素点进行二值化<br> 参数：thresh，阈值值。maxval，二值化的最大取值。type，二值化类型，一般设为0</p><h2 id="cv2-selectROI"><a href="#cv2-selectROI" class="headerlink" title="cv2.selectROI"></a>cv2.selectROI</h2><p>rect &#x3D; cv2.selectROI(“image”, img, showCrosshair, fromCenter)</p><p>“image” : winName 窗口名称</p><p>img : 目标想要裁剪的图像</p><p>showCrosshair : 是否显示网格</p><p>True 显示网格</p><p>False 只有矩形</p><p>fromCenter:</p><p>True 第一次选中的点为矩形的中心.</p><p>False 第一次选中的点为矩形的左上角.</p><p>返回的是一个tuple值, 代表矩形区域. 分别代表矩形左上角坐标 (x, y) 与矩形宽度<code>w</code>跟高度<code>h</code></p><p>(x, y, w, h) &#x3D; rect</p><p>用法：</p><p>rect&#x3D;cv2.selectROI(“22”,img,False)<br> (x, y, w, h) &#x3D; rect<br> im &#x3D; img[y : y+h, x:x+w]</p><h2 id="cv2-Shape"><a href="#cv2-Shape" class="headerlink" title="cv2. Shape"></a>cv2. Shape</h2><p>返回值：</p><p>shape[0] &#x3D;图像的高<br> shape[1] &#x3D;图像的宽<br> shape[2] &#x3D; 图像的图像<a href="https://so.csdn.net/so/search?q=%E9%80%9A%E9%81%93&spm=1001.2101.3001.7020">通道</a>数量</p><h2 id="cv2-split（）"><a href="#cv2-split（）" class="headerlink" title="cv2.split（）"></a>cv2.split（）</h2><p>通道拆分</p><p>返回值：</p><p>b,g,r&#x3D; cv2.split（图像）</p><p>cv2.merge（[b, g, r]）</p><p>cv2.merge(mv[, dst]) -&gt; retval # BGR 通道合并</p><p>参数说明：</p><p>mv：要合并的单通道</p><p>dst：通道合并的图像，nparray 多维数组</p><p>Numpy库加法的运算方法为：</p><p>目标图像 &#x3D; 图像1 + 图像2，运算结果进行取模运算。有以下两种情况：</p><p>（1）当像素值 &lt;&#x3D; 255时，结果为“图像1+图像2”，例如：120+48&#x3D;168</p><p>（2）当像素值 &gt; 255时，结果为对255取模的结果，例如：(255+64) % 255&#x3D;64</p><h2 id="add"><a href="#add" class="headerlink" title="add()"></a>add()</h2><p>OpenCV库实现图像加法运算，方法如下：</p><p>目标图像 &#x3D; cv2.add(图像1, 图像2)  。 此时结果是饱和运算，有以下两种情况：</p><p>（1）当像素值 &lt;&#x3D; 255时，结果为“图像1+图像2”，例如：120+48&#x3D;168</p><p>（2）当像素值 &gt; 255时，结果为255，例如：(255+64) &#x3D; 255  <strong>注意与<strong><strong>numpy</strong></strong>加法运算的区别！！！</strong></p><h2 id="addWeighted"><a href="#addWeighted" class="headerlink" title="addWeighted()"></a>addWeighted()</h2><p>图像融合：目标图像 &#x3D; 图像1 系数1 + 图像2  系数2 + 亮度调节量</p><p>dst &#x3D; cv2.addWeighter(scr1, alpha, src2, beta, gamma)</p><p>dst &#x3D; src1 alpha + src2  beta + gamma</p><p>其中，参数gamma不能省略</p><h2 id="cv2-copyMakeBorder"><a href="#cv2-copyMakeBorder" class="headerlink" title="cv2.copyMakeBorder()"></a>cv2.copyMakeBorder()</h2><p>为图像扩边（填充）<br> 想为图像周围建一个边可以使用cv2.copyMakeBorder()函数。这经常在卷积运算或0填充时被用到。</p><h2 id="cv2-copyMakeBorder-src-top-bottom-left-right-borderType-value"><a href="#cv2-copyMakeBorder-src-top-bottom-left-right-borderType-value" class="headerlink" title="cv2.copyMakeBorder(src,top,bottom,left,right,borderType,value)"></a>cv2.copyMakeBorder(src,top,bottom,left,right,borderType,value)</h2><p>具体参数如下：<br> src输入图像<br> top,bottom,left,right对应边界的像素数目<br> borderType要添加哪种类型的边界：<br> cv2.BORDER_CONSTANT添加有颜色的常数值边界，还需要下一个参数（value）<br> cv2.BORDER_REFLIECT边界元素的镜像。例如：fedcba | abcdefgh | hgfedcb<br> cv2.BORDER_101或者cv2.BORDER_DEFAULT跟上面一样，但稍作改动，例如：gfedcb | abcdefgh | gfedcba<br> cv2.BORDER_REPLICATE复后一个元素。例如: aaaaaa| abcdefgh|hhhhhhh<br> cv2.BORDER_WRAP 不知怎么了, 就像样: cdefgh| abcdefgh|abcdefg<br> value:边界颜色</p><h2 id="cv2-inRange（）"><a href="#cv2-inRange（）" class="headerlink" title="cv2.inRange（）"></a>cv2.inRange（）</h2><p>mask &#x3D; cv2.inRange(hsv, lower, upper) </p><p>函数很简单，参数有三个</p><p>第一个参数：hsv指的是原图</p><p>第二个参数：lower_指的是图像中低于这个lower的值，图像值变为0</p><p>第三个参数：upper指的是图像中高于这个upper的值，图像值变为0</p><p>而在lower～upper之间的值变成255</p><p>可以用阈值的范围来选择颜色</p><p><a href="https://imgse.com/i/vW8XTg"><img src="https://s1.ax1x.com/2022/08/28/vW8XTg.png" alt="vW8XTg.png"></a></p><h2 id="cv2-bitwise-and-src1src2-mask-x3D-X"><a href="#cv2-bitwise-and-src1src2-mask-x3D-X" class="headerlink" title="cv2.bitwise_and(src1src2,mask&#x3D;X)"></a>cv2.bitwise_and(src1src2,mask&#x3D;X)</h2><p> src1表示第一个array或scalar类型的输入值。</p><p> src2表示第二个array或scalar类型的输入值。</p><p>X表示可选操作掩码，8位单通道array，选择图像。</p><p>cv2.bitwise_and()是对二进制数据进行“与”操作，即对图像（灰度图像或彩色图像均可）每个像素值进行二进制“与”操作，1&amp;1&#x3D;1，1&amp;0&#x3D;0，0&amp;1&#x3D;0，0&amp;0&#x3D;0</p><h2 id="空间域滤波"><a href="#空间域滤波" class="headerlink" title="空间域滤波"></a>空间域滤波</h2><h2 id="cv2-blur-原始图像-核大小"><a href="#cv2-blur-原始图像-核大小" class="headerlink" title="cv2.blur(原始图像,核大小)"></a>cv2.blur(原始图像,核大小)</h2><p>均值滤波</p><p>指任意一点的像素值，都是周围 NxM个像素值的均值</p><p>注：</p><p>1）随着核大小逐渐变大，会让图像变得更加模糊；</p><p>2）如果设置为核大小为（1，1），则结果就是原始图像。</p><h2 id="cv2-medianBlur-src-ksize"><a href="#cv2-medianBlur-src-ksize" class="headerlink" title="cv2.medianBlur(src, ksize)"></a><strong>cv2.medianBlur(src, ksize)</strong></h2><p>这里的核大小ksize必须是奇数</p><p>将该点周围的像素点包括本身，按次序排列，取中位数作为点的像素值</p><p><strong>注：</strong></p><p>1）随着核大小逐渐变大，会让图像变得更加模糊；</p><p>2）核必须是大于1的<strong>奇数</strong>，如3、5、7等；</p><p>3）在代码 <strong>dst &#x3D; cv2.medianBlur(src, ksize)</strong> 中 填写核大小时，只需填写一个数即可，如3、5、7等，对比均值滤波函数用法。</p><h2 id="cv2-GaussianBlur-src-ksize-sigmaX"><a href="#cv2-GaussianBlur-src-ksize-sigmaX" class="headerlink" title="cv2.GaussianBlur(src, ksize, sigmaX)"></a><strong>cv2.GaussianBlur(src, ksize, sigmaX)</strong></h2><p>dst &#x3D; cv2.GaussianBlur(src, ksize, sigmaX, sigmaY, borderType) </p><p>——src输入图像。</p><p>——dst输出图像的大小和类型与src相同。</p><p>——ksize高斯内核大小。 ksize.width和ksize.height可以不同，但它们都必须为正数和奇数，也可以为零，然后根据sigmaX和sigmaY计算得出。</p><p>——sigmaX X方向上的高斯核标准偏差。</p><p>——sigmaY Y方向上的高斯核标准差；如果sigmaY为零，则将其设置为等于sigmaX；如果两个sigmas为零，则分别从ksize.width和ksize.height计算得出；为了完全控制结果，而不管将来可能对所有这些语义进行的修改，建议指定所有ksize，sigmaX和sigmaY。</p><h2 id="形态学处理"><a href="#形态学处理" class="headerlink" title="形态学处理"></a>形态学处理</h2><p><strong>腐蚀</strong>：<strong>cv2.<strong><strong>erode</strong></strong>(src, kernel, iterations)   #iterations****表示腐蚀几次</strong></p><p><strong>膨胀：****cv2.<strong><strong>dilate</strong></strong>(src, kernel, iterations)</strong></p><p><strong>开运算：****cv2.<strong><strong>morphologyEx</strong></strong>(src, cv2.<strong><strong>MORPH_OPEN</strong></strong>, kernel)</strong></p><p>*<em>闭运算：</em>***cv2.****morphologyEx(**<strong>src, cv2.<strong><strong>MORPH_CLOSE</strong></strong>, kernel)</strong></p><p># 设置卷积核<br> kernel &#x3D; np.ones((3, 3), np.uint8)<br> ‘’’形态学6种操作’’’<br> # 腐蚀<br> fushi &#x3D; cv2.erode(src, kernel)<br> # 膨胀<br> pengzhang &#x3D; cv2.dilate(src, kernel)<br> # 开运算<br> kai &#x3D; cv2.morphologyEx(src, cv2.MORPH_OPEN, kernel)<br> # 闭运算<br> bi &#x3D; cv2.morphologyEx(src, cv2.MORPH_CLOSE, kernel)<br> # 顶帽运算<br> tophat &#x3D; cv2.morphologyEx(src, cv2.MORPH_TOPHAT, kernel)<br> # 黑帽运算<br> blackhat &#x3D; cv2.morphologyEx(src, cv2.MORPH_BLACKHAT, kernel)</p><p><a href="https://docs.opencv.org/4.x/d9/d61/tutorial_py_morphological_ops.html">OpenCV：形态学转化</a></p><p><a href="https://imgse.com/i/vW8O0S"><img src="https://s1.ax1x.com/2022/08/28/vW8O0S.jpg" alt="vW8O0S.jpg"></a></p><h2 id="sobel算子"><a href="#sobel算子" class="headerlink" title="sobel算子"></a>sobel算子</h2><p># ddepth：cv2.CV_， 结果图像的位深</p><p># dx：对 x 方向求偏导</p><p># dy：对 y 方向求偏导</p><p># ksize：卷积核大小</p><p>cv2.Sobel(src, ddepth, dx:bool, dy:bool[, dst[, ksize:int[, scale[, delta[, borderType]]]]]) -&gt; dst</p><p>cv2.convertScaleAbs(src[, dst[, alpha[, beta]]]) -&gt; dst# src中的数据取绝对值</p><p>Sobel计算，会导致像素值为负，因此输出图像的位深ddepth应当使用「有符号类型」，例如cv2.CV_16S、cv2.CV_32F等</p><p>颜色通道数值不存在负数，所以还需要对计算结果取绝对值convertScaleAbs</p><p>对于横向、竖向的边界提取要分两次进行，一起提取效果很差</p><h2 id="Scharr算子（sobel算子改进版）"><a href="#Scharr算子（sobel算子改进版）" class="headerlink" title="Scharr算子（sobel算子改进版）"></a>Scharr算子（sobel算子改进版）</h2><p>cv2.Scharr(src, ddepth, dx, dy[, dst[, scale[, delta[, borderType]]]]) -&gt; dst</p><p>相比sobel算子卷积核ksize大小固定为<code>3x3</code></p><p>src：原始图像</p><p>ddepth：处理结果图像深度</p><p>dx：x轴方向</p><p>dy：y轴方向</p><h2 id="Laplacian算子"><a href="#Laplacian算子" class="headerlink" title="Laplacian算子"></a>Laplacian算子</h2><p><strong>dst &#x3D; cv2.Laplacian(src, ddepth)</strong></p><p> 注意：通常情况下，可以将图像深度ddepth的值设置为-1，让处理结果与原始图像保持一致</p><h2 id="cv2-Canny（）"><a href="#cv2-Canny（）" class="headerlink" title="cv2.Canny（）"></a>cv2.Canny（）</h2><p><strong>edges &#x3D;  cv2.Canny(image, threshold1, threshold2)</strong></p><p>image： 原始图像</p><p>threshold1： 阈值1 minVal</p><p>threshold2： 阈值2 maxVal</p><p> threshold值越小，细节越丰富</p><h2 id="cv2-pyrDown-img"><a href="#cv2-pyrDown-img" class="headerlink" title="cv2. pyrDown(img)"></a>cv2. pyrDown(img)</h2><p>将img图像缩小2倍</p><h2 id="cv2-pyrUp-img"><a href="#cv2-pyrUp-img" class="headerlink" title="cv2. pyrUp(img)"></a>cv2. pyrUp(img)</h2><p>将img图像放大两倍 </p><h2 id="cv2-findContours-image-mode-method"><a href="#cv2-findContours-image-mode-method" class="headerlink" title="cv2.findContours(image, mode, method)"></a>cv2.findContours(image, mode, method)</h2><p>mode: 轮廓检索模式</p><p>RETR_EXTERNAL:只检索最外面的轮廓；</p><p>RETR_LIST:检索所有的轮廓，并将其保存到一条链表当中；</p><p>RETR_CCOMP:检索所有的轮廓，并将他们组织为两层：顶层是各部分的外部边界，第二层是空洞的边界：</p><p><strong>RETR_TREE</strong>: 检索所有的轮廓，并重构嵌套轮廓的整个层次； <strong>最常用。</strong></p><p>method: 重新绘制轮廓的算法</p><p>CHAIN_APPROX_NONE:以Freeman链码的方式输出轮廓，轮廓信息完整保留</p><p>CHAIN_APPROX_SIMPLE:压缩水平的、垂直的和斜的部分，只保留顶点</p><p><strong>函数返回值：contours, hierarchy</strong></p><p>contours：从图像中查找出来的轮廓数组</p><p>hierarchy：轮廓层级</p><h2 id="cv2-drawContours（）"><a href="#cv2-drawContours（）" class="headerlink" title="cv2.drawContours（）"></a>cv2.drawContours（）</h2><p>canvas：轮廓要绘制在哪张背景图上，直接覆盖原图</p><p>contours：findContours 找到的轮廓信息</p><p>contourIdx：轮廓数组contours的索引值，-1 为全部</p><p>color：轮廓颜色</p><p>thickness：轮廓厚度</p><p>cv2.drawContours(canva:image, contours, contourIdx, color， thickness) -&gt; image</p><h1 id="时间的测量和计时："><a href="#时间的测量和计时：" class="headerlink" title="时间的测量和计时："></a>时间的测量和计时：</h1><p><a href="https://docs.opencv.org/4.0.0/db/de0/group__core__utils.html#gae73f58000611a1af25dd36d496bf4487"><strong>cv.getTickCount</strong></a>函数返回参考事件（如机器开启时刻）到调用此函数的时钟周期数。因此，如果在函数执行之前和之后调用它，则会获得用于执行函数的时钟周期数。</p><p><a href="https://docs.opencv.org/4.0.0/db/de0/group__core__utils.html#ga705441a9ef01f47acdc55d87fbe5090c"><strong>cv.getTickFrequency</strong></a>函数返回时钟周期的频率，或每秒钟的时钟周期数</p><p><code>e1 </code>&#x3D;<code> cv</code>.<code>getTickCount</code>()&#96;&#96;</p><p>#你的执行的代码&#96;&#96;</p><p><code>e2 </code>&#x3D;<code> cv</code>.<code>getTickCount</code>()&#96;&#96;</p><p><code>time </code>&#x3D;<code> </code>(<code>e2 </code>-<code> e1</code>)&#x2F;<code>cv</code>.<code>getTickFrequency</code>()</p>]]></content>
    
    
    
    <tags>
      
      <tag>opencv</tag>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>typora使用教程</title>
    <link href="/2022/08/14/typora%E7%9A%84%E4%BD%BF%E7%94%A8%E5%92%8Cmarkdowm%E8%AF%AD%E6%B3%95/"/>
    <url>/2022/08/14/typora%E7%9A%84%E4%BD%BF%E7%94%A8%E5%92%8Cmarkdowm%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="typora使用教程—如何优美的书写markdowm文件"><a href="#typora使用教程—如何优美的书写markdowm文件" class="headerlink" title="typora使用教程—如何优美的书写markdowm文件"></a>typora使用教程—如何优美的书写markdowm文件</h1><h2 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h2><blockquote><h4 id="Markdown是什么？"><a href="#Markdown是什么？" class="headerlink" title="Markdown是什么？"></a>Markdown<em>是什么</em>？</h4><h4 id="谁创造了它？"><a href="#谁创造了它？" class="headerlink" title="谁创造了它？"></a><em>谁</em>创造了它？</h4><h4 id="为什么要使用它？"><a href="#为什么要使用它？" class="headerlink" title="为什么要使用它？"></a><em>为什么</em>要使用它？</h4><h4 id="怎么使用？"><a href="#怎么使用？" class="headerlink" title="怎么使用？"></a><em>怎么</em>使用？</h4></blockquote><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="1-Markdown是什么？"><a href="#1-Markdown是什么？" class="headerlink" title="1. Markdown是什么？"></a>1. Markdown<em>是什么</em>？</h3><p><strong>Markdown</strong>是一种轻量级<strong>标记语言</strong>，它以纯文本形式(<em>易读、易写、易更改</em>)编写文档，并最终以HTML格式发布。<br><strong>Markdown</strong>也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。    </p><h3 id="2-谁创造了它？"><a href="#2-谁创造了它？" class="headerlink" title="2. 谁创造了它？"></a>2. <em>谁</em>创造了它？</h3><p>它由<a href="http://www.aaronsw.com/"><strong>Aaron Swartz</strong></a>和<strong>John Gruber</strong>共同设计，<strong>Aaron Swartz</strong>就是那位于（<em>2013年1月11日</em>）自杀,有着<strong>开挂</strong>一般人生经历的程序员。维基百科对他的<a href="http://zh.wikipedia.org/wiki/%E4%BA%9A%E4%BC%A6%C2%B7%E6%96%AF%E6%B2%83%E8%8C%A8">介绍</a>是：<strong>软件工程师、作家、政治组织者、互联网活动家、维基百科人</strong>。    </p><p>他有着足以让你跪拜的人生经历：    </p><ul><li><strong>14岁</strong>参与RSS 1.0规格标准的制订。     </li><li><strong>2004</strong>年入读<strong>斯坦福</strong>，之后退学。   </li><li><strong>2005</strong>年创建<a href="http://infogami.org/">Infogami</a>，之后与<a href="http://www.reddit.com/">Reddit</a>合并成为其合伙人。   </li><li><strong>2010</strong>年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。   </li><li><strong>2011</strong>年7月19日，因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。     </li><li><strong>2013</strong>年1月自杀身亡。</li></ul><p><img src="https://github.com/younghz/Markdown/raw/master/resource/Aaron_Swartz.jpg" alt="Aaron Swartz"></p><p>天才都有早逝的归途。</p><h3 id="3-为什么要使用它？"><a href="#3-为什么要使用它？" class="headerlink" title="3. 为什么要使用它？"></a>3. <em>为什么</em>要使用它？</h3><ul><li>它是易读（看起来舒服）、易写（语法简单）、易更改<strong>纯文本</strong>。处处体现着<strong>极简主义</strong>的影子。</li><li>兼容HTML，可以转换为HTML格式发布。</li><li>跨平台使用。</li><li>越来越多的网站支持Markdown。</li><li>更方便清晰地组织你的电子邮件。（Markdown-here, Airmail）</li><li>摆脱Word（我不是认真的）。</li></ul><h3 id="4-怎么使用？"><a href="#4-怎么使用？" class="headerlink" title="4. 怎么使用？"></a>4. <em>怎么</em>使用？</h3><p>如果不算<strong>扩展</strong>，Markdown的语法绝对<strong>简单</strong>到让你爱不释手。</p><p>Markdown语法主要分为如下几大部分：<br><strong>标题</strong>，<strong>段落</strong>，<strong>区块引用</strong>，<strong>代码区块</strong>，<strong>强调</strong>，<strong>列表</strong>，<strong>分割线</strong>，<strong>链接</strong>，<strong>图片</strong>，**反斜杠 <code>\</code><strong>，</strong>符号’&#96;’**。</p><h4 id="4-1-标题"><a href="#4-1-标题" class="headerlink" title="4.1 标题"></a>4.1 标题</h4><p>一、使用<code>#</code>，可表示1-6级标题。</p><blockquote><p># 一级标题<br>## 二级标题<br>### 三级标题<br>#### 四级标题<br>##### 五级标题<br>###### 六级标题    </p></blockquote><h4 id="4-2-段落"><a href="#4-2-段落" class="headerlink" title="4.2 段落"></a>4.2 段落</h4><p>段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用<strong>两个以上</strong>空格加上回车（引用中换行省略回车）。</p><h4 id="4-3-区块引用"><a href="#4-3-区块引用" class="headerlink" title="4.3 区块引用"></a>4.3 区块引用</h4><p>在段落的每行或者只在第一行使用符号<code>&gt;</code>,还可使用多个嵌套引用，如：</p><blockquote><p>&gt; 区块引用<br>&gt;&gt; 嵌套引用  </p></blockquote><p>效果：</p><blockquote><p>区块引用  </p><blockquote><p>嵌套引用</p></blockquote></blockquote><h4 id="4-4-代码区块"><a href="#4-4-代码区块" class="headerlink" title="4.4 代码区块"></a>4.4 代码区块</h4><p>使用栅栏式代码块很简单：输入&#96;&#96;&#96;之后输入一个可选的语言标识符，然后按return键后输入代码，我们将通过语法高亮显示它：。如    </p><p>普通段落：</p><p>void main()<br>{<br>    printf(“Hello, Markdown.”);<br>}    </p><p>代码区块：</p><pre><code class="hljs">void main()&#123;    printf(&quot;Hello, Markdown.&quot;);&#125;</code></pre><p><strong>注意</strong>:需要和普通段落之间存在空行。</p><h4 id="4-5-强调"><a href="#4-5-强调" class="headerlink" title="4.5 强调"></a>4.5 强调</h4><p>在强调内容两侧分别加上<code>*</code>或者<code>_</code>，如：</p><blockquote><p>*斜体*，_斜体_<br>**粗体**，__粗体__</p></blockquote><p>效果：</p><blockquote><p><em>斜体</em>，<em>斜体</em><br><strong>粗体</strong>，<strong>粗体</strong></p></blockquote><h4 id="4-6-列表"><a href="#4-6-列表" class="headerlink" title="4.6 列表"></a>4.6 列表</h4><p>使用<code>·</code>、<code>+</code>、或<code>-</code>标记无序列表，如：</p><blockquote><p>-（+*） 第一项<br>-（+*） 第二项<br>- （+*）第三项</p></blockquote><p><strong>注意</strong>：标记后面最少有一个_空格_或_制表符_。若不在引用区块中，必须和前方段落之间存在空行。</p><p>效果：</p><blockquote><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></blockquote><p>有序列表的标记方式是将上述的符号换成数字,并辅以<code>.</code>，如：</p><blockquote><p>1 . 第一项<br>2 . 第二项<br>3 . 第三项    </p></blockquote><p>效果：</p><blockquote><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol></blockquote><h4 id="4-7-分割线"><a href="#4-7-分割线" class="headerlink" title="4.7 分割线"></a>4.7 分割线</h4><p>输入 <code>***</code> 或 <code>---</code> 在空行上按 <code>return</code> 键将绘制一条水平线。</p><hr><h4 id="4-8-链接"><a href="#4-8-链接" class="headerlink" title="4.8 链接"></a>4.8 链接</h4><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p>参考样式链接使用第二组方括号，在其中放置您选择的标签以标识链接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">This is [an example][<span class="hljs-built_in">id</span>] reference-style <span class="hljs-built_in">link</span>.<br><br>然后，在文档中的任何位置，您可以单独定义链接标签，如下所示：<br><br>[<span class="hljs-built_in">id</span>]: http://example.com/  <span class="hljs-string">&quot;Optional Title Here&quot;</span><br></code></pre></td></tr></table></figure><p>在typora中，它们将呈现为：</p><p>This is <a href="http://example.com/">an example</a> reference-style link.</p><p>隐式链接名称快捷方式允许您省略链接的名称，在这种情况下，链接文本本身将用作名称。只需使用一组空的方括号，例如，将“Google”一词链接到google.com网站，您只需写下：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-attr">[Google]</span><span class="hljs-selector-attr">[]</span><br>然后定义链接：<br><br><span class="hljs-selector-attr">[Google]</span>: <span class="hljs-selector-tag">http</span>:<span class="hljs-comment">//google.com/</span><br></code></pre></td></tr></table></figure><p>在typora中单击链接将其展开以进行编辑，command + 单击将在 Web 浏览器中打开超链接。+</p><p>比如：</p><p><a href="https://github.com/manxingyu?tab=repositories">我的github库</a></p><p>Typora允许您将 URL 作为链接插入，用 <code>&lt;</code>括号括起来<code>&gt;</code>。</p><p><code>&lt;i@typora.io&gt;</code> 成为 <a href="mailto:i@typora.io">i@typora.io</a>.</p><p>Typora也将自动链接标准URL。例如：&lt;<a href="https://github.com/manxingyu?tab=repositories">Your Repositories (github.com)</a>&gt;</p><h4 id="4-9-图片"><a href="#4-9-图片" class="headerlink" title="4.9 图片"></a>4.9 图片</h4><p>图像与链接类似， 但在链接语法之前需要添加额外的 <code>!</code> 字符。 图像语法如下所示：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">!<span class="hljs-selector-attr">[替代文字]</span>(/path/<span class="hljs-selector-tag">to</span>/<span class="hljs-selector-tag">img</span><span class="hljs-selector-class">.jpg</span>)<br><br>!<span class="hljs-selector-attr">[替代文字]</span>(/path/<span class="hljs-selector-tag">to</span>/<span class="hljs-selector-tag">img</span><span class="hljs-selector-class">.jpg</span> &quot;可选标题&quot;)<br></code></pre></td></tr></table></figure><p>您可以使用拖放操作从图像文件或浏览器来插入图像。并通过单击图像修改 markdown 源代码。如果图像在拖放时与当前编辑文档位于同一目录或子目录中，则将使用相对路径.</p><h4 id="4-10-符号’……’"><a href="#4-10-符号’……’" class="headerlink" title="4.10 符号’……’"></a>4.10 符号’……’</h4><p>起到标记作用。如：</p><blockquote><p>`ctrl+a`</p></blockquote><p>效果：</p><blockquote><p><code>ctrl+a</code>    </p></blockquote><h4 id="4-11脚注"><a href="#4-11脚注" class="headerlink" title="4.11脚注"></a>4.11脚注</h4><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs prolog">您可以像这样创建脚注[^footnote].<br><br>[^footnote]: <span class="hljs-symbol">Here</span> is the *text* of the **footnote**.<br></code></pre></td></tr></table></figure><p>将产生：</p><p>您可以像这样创建脚注:</p><p>这是<a href="%E8%84%9A%E6%B3%A8%E7%BC%96%E8%BE%91%E6%96%87%E6%9C%AC">^脚注</a> </p><p>鼠标移动到‘脚注’上标中查看脚注的内容。</p><h4 id="4-12删除线"><a href="#4-12删除线" class="headerlink" title="4.12删除线"></a>4.12删除线</h4><p>GFM通过添加语法来创建删除线文本，标准的Markdown中缺少该文本。</p><p><code>~~错误的文字。~~</code> 变成 <del>错误的文字。</del></p><h4 id="4-13下划线"><a href="#4-13下划线" class="headerlink" title="4.13下划线"></a>4.13下划线</h4><p>下划线由原始HTML提供支持。</p><p><code>&lt;u&gt;下划线&lt;/u&gt;</code> 变成 下划线</p><h4 id="4-14表情符号-smile"><a href="#4-14表情符号-smile" class="headerlink" title="4.14表情符号 :smile:"></a>4.14表情符号 :smile:</h4><p>输入表情符号的语法是 <code>:smile:</code></p><p>用户可以通过 <code>ESC</code> 按键触发表情符号的自动完成建议，或者在偏好设置面板里启用后自动触发表情符号。此外，还支持直接从 <code>Edit</code> -&gt; <code>Emoji &amp; Symbols</code> 菜单栏输入UTF8表情符号字符。</p><h4 id="4-15任务列表"><a href="#4-15任务列表" class="headerlink" title="4.15任务列表"></a>4.15任务列表</h4><p>任务列表是标记为[ ]或[x]（未完成或完成）的项目的列表。例如：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus">- <span class="hljs-selector-attr">[ ]</span> 这是一个任务列表项<br>- <span class="hljs-selector-attr">[ ]</span> 需要在前面使用列表的语法<br>- <span class="hljs-selector-attr">[ ]</span> <span class="hljs-attribute">normal</span> **formatting**, @mentions, <span class="hljs-number">#1234</span> refs<br>- <span class="hljs-selector-attr">[ ]</span> 未完成<br>- <span class="hljs-selector-attr">[x]</span> 完成<br></code></pre></td></tr></table></figure><p>您可以通过单击项目前面的复选框来更改完成&#x2F;未完成状态。</p><p>‘ - [ ] 任务 ‘</p><ul><li><input disabled="" type="checkbox"> 任务</li></ul><h4 id="4-16HTML"><a href="#4-16HTML" class="headerlink" title="4.16HTML"></a>4.16HTML</h4><h5 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h5><p>效果：</p><p><span style="color: #123ABC;">#123ABC 颜色</span></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;color: #123ABC;&quot;</span>&gt;</span>#123ABC 颜色<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="大小"><a href="#大小" class="headerlink" title="大小"></a>大小</h5><p>效果：</p><p><span style="font-size:0.85em;">0.85em 文字大小</span></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;font-size:0.85em;&quot;</span>&gt;</span>0.85em 文字大小<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="位置"><a href="#位置" class="headerlink" title="位置"></a>位置</h5><p>效果：</p><div align="center">居中</div><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;center&quot;</span>&gt;</span>居中<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="折叠"><a href="#折叠" class="headerlink" title="折叠"></a>折叠</h5><details>    这是折叠内容  <summary>点击查看效果</summary><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">details</span>&gt;</span><br>    这是折叠内容<br>  <span class="hljs-tag">&lt;<span class="hljs-name">summary</span>&gt;</span>点击查看效果<span class="hljs-tag">&lt;/<span class="hljs-name">summary</span>&gt;</span><br></code></pre></td></tr></table></figure><h5 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&lt;img <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;https://s1.ax1x.com/2022/08/19/vsmKSI.png&quot;</span> <span class="hljs-attribute">alt</span>=<span class="hljs-string">&quot;图片-1&quot;</span> <span class="hljs-attribute">width</span>=<span class="hljs-string">&quot;100&quot;</span> <span class="hljs-attribute">height</span>=<span class="hljs-string">&quot;100&quot;</span>&gt;&lt;/img&gt;<br><br>&lt;img <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;https://s1.ax1x.com/2022/08/19/vsmKSI.png&quot;</span> <span class="hljs-attribute">alt</span>=<span class="hljs-string">&quot;图片-2&quot;</span> <span class="hljs-attribute">width</span>=<span class="hljs-string">&quot;100&quot;</span>&gt;&lt;/img&gt;<br><br>&lt;img <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;https://s1.ax1x.com/2022/08/19/vsmKSI.png&quot;</span> <span class="hljs-attribute">alt</span>=<span class="hljs-string">&quot;图片-3&quot;</span> <span class="hljs-attribute">width</span>=<span class="hljs-string">&quot;20%&quot;</span> <span class="hljs-attribute">height</span>=<span class="hljs-string">&quot;20%&quot;</span>&gt;&lt;/img&gt;<br></code></pre></td></tr></table></figure><p>效果：</p><p><img src="http://rheubjsha.hn-bkt.clouddn.com/205528041_1.jpg" alt="图片-1" width="100" height="100"></img></p><p><img src="http://rheubjsha.hn-bkt.clouddn.com/205528041_1.jpg" alt="图片-2" width="100"></img></p><p><img src="http://rheubjsha.hn-bkt.clouddn.com/205528041_1.jpg" alt="图片-3" width="20%" height="20%"></img></p><h2 id="参考链接-1"><a href="#参考链接-1" class="headerlink" title="参考链接"></a>参考链接</h2><p>&lt;<a href="https://markdown.com.cn/basic-syntax/">Markdown 基本语法 | Markdown 官方教程</a>&gt;</p>]]></content>
    
    
    
    <tags>
      
      <tag>Markdowm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>聊聊这个小破站</title>
    <link href="/2022/08/14/%E5%BB%BA%E7%AB%99%E7%9A%84%E6%83%B3%E6%B3%95/"/>
    <url>/2022/08/14/%E5%BB%BA%E7%AB%99%E7%9A%84%E6%83%B3%E6%B3%95/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
